# ------------------------------------------------------------
# Workflow Name : _reusable-quality-gates
# Trigger       : workflow_call
# Purpose       :
#   - Lint
#   - Build
#   - Unit
#   - Integration
#   - E2E
#   - uv + ruff + pytest 前提（必要に応じて編集）
# ------------------------------------------------------------
name: _reusable-quality-gates

on:
  workflow_call:
    inputs:
      python-version:
        description: Python version
        required: false
        type: string
        default: "3.12"
      run-integration:
        description: Run Integration Tests
        required: false
        type: boolean
        default: true
      run-e2e:
        description: Run E2E Tests
        required: false
        type: boolean
        default: true
      integration-command:
        description: Custom command for Integration tests (override)
        required: false
        type: string
        default: "pytest -v -m 'integration'"
      e2e-command:
        description: Custom command for E2E tests (override)
        required: false
        type: string
        default: "pytest -v -m 'e2e'"
    outputs:
      build-artifacts-path:
        description: Path where build artifacts placed
        value: dist

permissions:
  contents: read

jobs:
  lint:
    name: Lint (ruff)
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "INOP."

      # - uses: actions/checkout@v4

      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ inputs['python-version'] }}

      # - name: Install uv
      #   run: pip install uv

      # - name: Lint
      #   run: |
      #     # uvx ruff format --check
      #     # uvx ruff check


  build:
    name: Build (uv build)
    runs-on: ubuntu-latest
    needs: [lint]
    outputs:
      dist-path: dist
    steps:
      - run: |
          echo "INOP."

      # - uses: actions/checkout@v4

      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ inputs['python-version'] }}

      # - name: Install uv
      #   run: pip install uv

      # - name: Build package
      #   run: uv build

      # - name: Show artifacts
      #   run: ls -l dist

      # - name: Upload wheel/sdist (for downstream jobs)
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: dist
      #     path: dist/*


  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - run: |
          echo "INOP"

      # - uses: actions/checkout@v4

      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ inputs['python-version'] }}

      # - name: Download build artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: dist
      #     path: dist

      # - name: Install built wheel
      #   run: pip install dist/*.whl

      # - name: Run Unit Tests (pytest)
      #   run: pytest -v -m "not integration and not e2e"


  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [unit]
    if: ${{ inputs.run-integration }}
    steps:
      - run: |
          echo "INOP."

      # - uses: actions/checkout@v4

      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ inputs['python-version'] }}

      # - name: Download build artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: dist
      #     path: dist

      # - name: Install built wheel
      #   run: pip install dist/*.whl

      # - name: Run Integration Tests
      #   run: ${{ inputs.integration-command }}


  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    # E2E は Integration の後に実行（順序保証）
    needs: [integration]
    if: ${{ always() && inputs.run-e2e && needs.integration.result == 'success' }}
    steps:
      - run: |
          echo "INOP."

      # - uses: actions/checkout@v4

      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ inputs['python-version'] }}

      # - name: Download build artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: dist
      #     path: dist

      # - name: Install built wheel
      #   run: pip install dist/*.whl

      # - name: Run E2E Tests
      #   run: ${{ inputs.e2e-command }}
